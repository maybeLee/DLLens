{
  "function_name": "torch.Tensor.aminmax(input, *, dim=None, keepdim=False)",
  "inputs": [
    "input"
  ],
  "sample_inputs": [
    "input = torch.tensor([[1, 2], [3, 4]], dtype=torch.float32)",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]])",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])",
    "input = torch.tensor(np.random.randn(2,2), dtype=torch.float64)",
    "input = torch.tensor(np.random.randn(2,2,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,4), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(1,2), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,2,1,1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,2,1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,2), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(5,2), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2,3), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(2), dtype=torch.float32)"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(input):\n  return torch.Tensor.aminmax(input)",
    "tensorflow": "def tensorflow_call(input):\n    min_value = tf.reduce_min(input)\n    max_value = tf.reduce_max(input)\n    return (min_value, max_value)"
  },
  "llm_inputs": [
    "input = torch.tensor([[1, 2], [3, 4]], dtype=torch.float32)",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]])",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])"
  ]
}