{
  "function_name": "torch.column_stack(tensors, *, out=None)",
  "inputs": [
    "tensors"
  ],
  "sample_inputs": [
    "tensors = [torch.tensor([1, 2, 3]), torch.tensor([4, 5, 6]), torch.tensor([7, 8, 9])]",
    "tensors = [torch.tensor([1, 2, 3], dtype=torch.float32), torch.tensor([4, 5, 6], dtype=torch.float32), torch.tensor([7, 8, 9], dtype=torch.float32)]",
    "tensors = [torch.tensor([1, 2, 3]), torch.tensor([4, 5, 6])]"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(tensors):\n  return torch.column_stack(tensors)",
    "tensorflow": "def tensorflow_call(tensors):\n    return tf.stack(tensors, axis=1)"
  },
  "llm_inputs": [
    "tensors = [torch.tensor([1, 2, 3]), torch.tensor([4, 5, 6]), torch.tensor([7, 8, 9])]",
    "tensors = [torch.tensor([1, 2, 3], dtype=torch.float32), torch.tensor([4, 5, 6], dtype=torch.float32), torch.tensor([7, 8, 9], dtype=torch.float32)]",
    "tensors = [torch.tensor([1, 2, 3]), torch.tensor([4, 5, 6])]"
  ]
}