{
  "function_name": "torch.cross(input, other, dim=None, *, out=None)",
  "inputs": [
    "input",
    "other",
    "dim"
  ],
  "sample_inputs": [
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nother = torch.tensor([[7.0, 8.0, 9.0], [10.0, 11.0, 12.0]])\ndim = 1",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]])\nother = torch.tensor([[7, 8, 9], [10, 11, 12]])\ndim = 1",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.float32)\nother = torch.tensor([[7, 8, 9], [10, 11, 12]], dtype=torch.float32)\ndim = 1",
    "other = torch.tensor([[7.0, 8.0, 9.0], [10.0, 11.0, 12.0]])\ndim = 1\ninput = torch.tensor(np.random.randn(2,3), dtype=torch.float32)",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\ndim = 1\nother = torch.tensor(np.random.randn(1,3), dtype=torch.float32)",
    "other = torch.tensor([[7.0, 8.0, 9.0], [10.0, 11.0, 12.0]])\ndim = 1\ninput = torch.tensor(np.random.randn(1,3), dtype=torch.float32)",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\ndim = 1\nother = torch.tensor(np.random.randn(2,3), dtype=torch.float32)",
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nother = torch.tensor([[7.0, 8.0, 9.0], [10.0, 11.0, 12.0]])\ndim = -1"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(input,other,dim=None):\n  return torch.cross(input,other,dim)",
    "tensorflow": "def tensorflow_call(input, other, dim=None):\n    if input.shape[1] != other.shape[1]:\n        raise ValueError('Both inputs must have the same number of columns.')\n    if input.shape[0] != other.shape[0]:\n        if input.shape[0] == 1:\n            input = tf.repeat(input, repeats=other.shape[0], axis=0)\n        elif other.shape[0] == 1:\n            other = tf.repeat(other, repeats=input.shape[0], axis=0)\n    return tf.linalg.cross(input, other)"
  },
  "llm_inputs": [
    "input = torch.tensor([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nother = torch.tensor([[7.0, 8.0, 9.0], [10.0, 11.0, 12.0]])\ndim = 1",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]])\nother = torch.tensor([[7, 8, 9], [10, 11, 12]])\ndim = 1",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.float32)\nother = torch.tensor([[7, 8, 9], [10, 11, 12]], dtype=torch.float32)\ndim = 1"
  ]
}