{
  "function_name": "torch.trace(input)",
  "inputs": [
    "input"
  ],
  "sample_inputs": [
    "input = torch.tensor([[1, 2], [3, 4]])",
    "input = torch.tensor([[1.0, 2.0], [3.0, 4.0]])",
    "input = torch.tensor(np.random.randint(-50, 50, (5,2)), dtype=torch.int64)",
    "input = torch.tensor(np.random.randint(-50, 50, (2,2)), dtype=torch.int32)",
    "input = torch.tensor(np.random.randint(-50, 50, (4,2)), dtype=torch.int64)",
    "input = torch.tensor(np.random.randint(-50, 50, (2,5)), dtype=torch.int64)",
    "input = torch.tensor(np.random.randint(-50, 50, (2,1)), dtype=torch.int64)",
    "input = torch.tensor(np.random.randint(-50, 50, (2,2)), dtype=torch.int64)",
    "input = torch.tensor(np.random.randint(-50, 50, (2,4)), dtype=torch.int64)"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(input):\n  return torch.trace(input)",
    "tensorflow": "def tensorflow_call(input):\n    return tf.linalg.trace(input)"
  },
  "llm_inputs": [
    "input = torch.tensor([[1, 2], [3, 4]])",
    "input = torch.tensor([[1, 2], [3, 4]])",
    "input = torch.tensor([[1.0, 2.0], [3.0, 4.0]])"
  ]
}