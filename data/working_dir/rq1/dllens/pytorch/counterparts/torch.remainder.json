{
  "function_name": "torch.remainder(input, other, *, out=None)",
  "inputs": [
    "input",
    "other"
  ],
  "sample_inputs": [
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]])\nother = torch.tensor([[2, 3, 4], [5, 6, 7]])",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor([[2, 2, 2], [2, 2, 2]], dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (2,3,1,1)), dtype=torch.int32)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (2,3,1,1)), dtype=torch.int32)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, ()), dtype=torch.int32)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (2,3)), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (2,1)), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (2,3)), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (2,3,1,1,1)), dtype=torch.int32)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (2,3,1,1,1)), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, ()), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (1,3)), dtype=torch.int32)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (2,1)), dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor(np.random.randint(-50, 50, (2,3)), dtype=torch.int64)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (2,3)), dtype=torch.int64)",
    "other = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)\ninput = torch.tensor(np.random.randint(-50, 50, (1,3)), dtype=torch.int32)"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(input,other):\n  return torch.remainder(input,other)",
    "tensorflow": "def tensorflow_call(input, other):\n    input = tf.cast(input, dtype=tf.int64)\n    other = tf.cast(other, dtype=tf.int64)\n    return tf.math.floormod(input, other)"
  },
  "llm_inputs": [
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor([[2, 3, 4], [5, 6, 7]], dtype=torch.int32)",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]])\nother = torch.tensor([[2, 3, 4], [5, 6, 7]])",
    "input = torch.tensor([[1, 2, 3], [4, 5, 6]], dtype=torch.int32)\nother = torch.tensor([[2, 2, 2], [2, 2, 2]], dtype=torch.int32)"
  ]
}