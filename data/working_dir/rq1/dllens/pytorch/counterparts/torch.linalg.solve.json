{
  "function_name": "torch.linalg.solve(A, B, *, out=None)",
  "inputs": [
    "A",
    "B"
  ],
  "sample_inputs": [
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor([1.0, 2.0])",
    "B = torch.tensor([1.0, 2.0])\nA = torch.tensor(np.random.randn(2,2), dtype=torch.float32)",
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor(np.random.randn(2), dtype=torch.float32)",
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor(np.random.randn(2,1), dtype=torch.float32)"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(A,B):\n  return torch.linalg.solve(A,B)",
    "tensorflow": "def tensorflow_call(A, B):\n    B = tf.reshape(B, (-1, 1))\n    return tf.linalg.solve(A, B)"
  },
  "llm_inputs": [
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor([1.0, 2.0])",
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor([1.0, 2.0])",
    "A = torch.tensor([[2.0, 1.0], [1.0, 3.0]])\nB = torch.tensor([1.0, 2.0])"
  ]
}