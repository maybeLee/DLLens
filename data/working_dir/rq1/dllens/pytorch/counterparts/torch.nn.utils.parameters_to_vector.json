{
  "function_name": "torch.nn.utils.parameters_to_vector(parameters)",
  "inputs": [
    "parameters"
  ],
  "sample_inputs": [
    "parameters = [torch.tensor([1.0, 2.0, 3.0]), torch.tensor([4.0, 5.0]), torch.tensor([6.0])]",
    "parameters = [torch.tensor([[1.0, 2.0], [3.0, 4.0]]), torch.tensor([5.0]), torch.tensor([[6.0], [7.0], [8.0]])]"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(parameters):\n  return torch.nn.utils.parameters_to_vector(parameters)",
    "tensorflow": "def tensorflow_call(parameters):\n    flattened_parameters = [tf.reshape(param, [-1]) for param in parameters]\n    concatenated = tf.concat(flattened_parameters, axis=0)\n    return concatenated"
  },
  "llm_inputs": [
    "parameters = [torch.tensor([1.0, 2.0, 3.0]), torch.tensor([4.0, 5.0]), torch.tensor([6.0])]",
    "parameters = [torch.tensor([1.0, 2.0, 3.0]), torch.tensor([4.0, 5.0]), torch.tensor([6.0])]",
    "parameters = [torch.tensor([[1.0, 2.0], [3.0, 4.0]]), torch.tensor([5.0]), torch.tensor([[6.0], [7.0], [8.0]])]"
  ]
}