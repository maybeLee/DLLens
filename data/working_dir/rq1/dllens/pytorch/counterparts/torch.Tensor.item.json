{
  "function_name": "torch.Tensor.item(input)",
  "inputs": [
    "input"
  ],
  "sample_inputs": [
    "input = torch.tensor(5.0)",
    "input = torch.tensor(np.random.randn(1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(1,1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(), dtype=torch.float64)",
    "input = torch.tensor(np.random.randn(), dtype=torch.half)",
    "input = torch.tensor(np.random.randn(), dtype=torch.float16)",
    "input = torch.tensor(np.random.randn(1,1,1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(1,1,1,1,1), dtype=torch.float32)",
    "input = torch.tensor(np.random.randn(), dtype=torch.float32)"
  ],
  "counterparts": {
    "pytorch": "def pytorch_call(input):\n  return torch.Tensor.item(input)",
    "tensorflow": "def tensorflow_call(input):\n    return tf.reduce_mean(input).numpy().item()"
  },
  "llm_inputs": [
    "input = torch.tensor(5.0)",
    "input = torch.tensor(5.0)",
    "input = torch.tensor(5.0)"
  ]
}