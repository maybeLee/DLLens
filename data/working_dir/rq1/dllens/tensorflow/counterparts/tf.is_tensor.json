{
  "function_name": "tf.is_tensor(x)",
  "inputs": [
    "x"
  ],
  "sample_inputs": [
    "x = tf.constant([[1, 2], [3, 4]])",
    "x = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int64')",
    "x = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,2,1,1,1)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,5)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,2,1)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2,2,1,1)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "x = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x):\n  return tf.is_tensor(x)",
    "pytorch": "def pytorch_call(x):\n    return torch.is_tensor(x)"
  },
  "llm_inputs": [
    "x = tf.constant([[1, 2], [3, 4]])",
    "x = tf.constant([[1, 2], [3, 4]])",
    "x = tf.constant([[1, 2], [3, 4]])"
  ]
}