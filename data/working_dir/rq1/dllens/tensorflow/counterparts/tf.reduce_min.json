{
  "function_name": "tf.reduce_min(input_tensor,axis=None,keepdims=False,name=None)",
  "inputs": [
    "input_tensor",
    "axis",
    "keepdims"
  ],
  "sample_inputs": [
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\naxis = 1\nkeepdims = True",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = 0\nkeepdims = True",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = 1\nkeepdims = True",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\nkeepdims = True\naxis = 0",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,5)), dtype='int32')",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\naxis = 1\nkeepdims = False",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\nkeepdims = True\naxis = -2",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\nkeepdims = True\naxis = 1",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,3,1,1,1)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,3,1)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,3,1,1)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (4,3)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,3)), dtype='int32')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (2,3)), dtype='int64')",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (1,3)), dtype='int32')",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\nkeepdims = True\naxis = -1",
    "axis = 1\nkeepdims = True\ninput_tensor = tf.constant(np.random.randint(-50, 50, (5,3)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input_tensor,axis=None,keepdims=False):\n  return tf.reduce_min(input_tensor,axis,keepdims)",
    "pytorch": "def pytorch_call(input_tensor, axis=None, keepdims=False):\n    result = torch.min(input_tensor, dim=axis, keepdim=keepdims)\n    return result.values"
  },
  "llm_inputs": [
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.int32)\naxis = 1\nkeepdims = True",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = 0\nkeepdims = True",
    "input_tensor = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = 1\nkeepdims = True"
  ]
}