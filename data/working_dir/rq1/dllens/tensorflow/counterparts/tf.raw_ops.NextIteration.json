{
  "function_name": "tf.raw_ops.NextIteration(data,name=None)",
  "inputs": [
    "data"
  ],
  "sample_inputs": [
    "data = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)",
    "data = tf.constant([1, 2, 3], dtype=tf.int32)",
    "data = tf.constant(np.random.randn(5,2), dtype='float32')",
    "data = tf.constant(np.random.randn(2,2,1), dtype='float32')",
    "data = tf.constant(np.random.randn(2,5), dtype='float32')",
    "data = tf.constant(np.random.randn(2,1), dtype='float32')",
    "data = tf.constant(np.random.randn(3,2), dtype='float32')",
    "data = tf.constant(np.random.randn(2,2,1,1), dtype='float32')",
    "data = tf.constant(np.random.randn(2,2), dtype='half')",
    "data = tf.constant(np.random.randn(), dtype='float32')",
    "data = tf.constant(np.random.randn(2,2), dtype='float16')",
    "data = tf.constant(np.random.randn(2,2), dtype='float64')",
    "data = tf.constant(np.random.randn(2,2), dtype='float32')",
    "data = tf.constant(np.random.randn(2,2,1,1,1), dtype='float32')",
    "data = tf.constant(np.random.randn(2), dtype='float32')",
    "data = tf.constant(np.random.randn(1,2), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(data):\n  return tf.raw_ops.NextIteration(data=data)",
    "pytorch": "def pytorch_call(data):\n    return data"
  },
  "llm_inputs": [
    "data = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)",
    "data = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)",
    "data = tf.constant([1, 2, 3], dtype=tf.int32)"
  ]
}