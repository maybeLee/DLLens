{
  "function_name": "tf.square(x,name=None)",
  "inputs": [
    "x"
  ],
  "sample_inputs": [
    "x = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)",
    "x = tf.constant([[1.0, 2.0], [3.0, 4.0]])",
    "x = tf.constant(np.random.randn(5), dtype='float32')",
    "x = tf.constant(np.random.randn(5), dtype='half')",
    "x = tf.constant(np.random.randn(5,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5,1,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(), dtype='float32')",
    "x = tf.constant(np.random.randn(5), dtype='float16')",
    "x = tf.constant(np.random.randn(5), dtype='float64')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x):\n  return tf.square(x)",
    "pytorch": "def pytorch_call(x):\n    return torch.square(x)"
  },
  "llm_inputs": [
    "x = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)",
    "x = tf.constant([[1.0, 2.0], [3.0, 4.0]])",
    "x = tf.constant([[1.0, 2.0], [3.0, 4.0]])"
  ]
}