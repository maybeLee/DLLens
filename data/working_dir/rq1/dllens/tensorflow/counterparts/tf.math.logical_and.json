{
  "function_name": "tf.math.logical_and(x,y,name=None)",
  "inputs": [
    "x",
    "y"
  ],
  "sample_inputs": [
    "x = tf.constant([[True, False], [False, True]], dtype=tf.bool)\ny = tf.constant([[True, True], [False, False]], dtype=tf.bool)",
    "x = tf.constant([[True, False], [False, True]])\ny = tf.constant([[False, True], [True, False]])",
    "x = tf.constant([[True, False], [False, True]])\ny = tf.constant([[True, True], [False, False]])"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x,y):\n  return tf.math.logical_and(x,y)",
    "pytorch": "def pytorch_call(x, y):\n    return torch.logical_and(x, y)"
  },
  "llm_inputs": [
    "x = tf.constant([[True, False], [False, True]], dtype=tf.bool)\ny = tf.constant([[True, True], [False, False]], dtype=tf.bool)",
    "x = tf.constant([[True, False], [False, True]])\ny = tf.constant([[False, True], [True, False]])",
    "x = tf.constant([[True, False], [False, True]])\ny = tf.constant([[True, True], [False, False]])"
  ]
}