{
  "function_name": "tf.reverse(tensor,axis,name=None)",
  "inputs": [
    "tensor",
    "axis"
  ],
  "sample_inputs": [
    "tensor = tf.constant([[1, 2, 3], [4, 5, 6]])\naxis = tf.constant([0])",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,3,1)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,3,1,1,1)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,5)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,3,1,1)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,4)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (5,3)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,3)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (1,3)), dtype='int32')",
    "axis = tf.constant([0])\ntensor = tf.constant(np.random.randint(-50, 50, (2,3)), dtype='int64')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(tensor,axis):\n  return tf.reverse(tensor,axis)",
    "pytorch": "def pytorch_call(tensor, axis):\n    axis_list = axis.tolist()\n    return torch.flip(tensor, dims=axis_list)"
  },
  "llm_inputs": [
    "tensor = tf.constant([[1, 2, 3], [4, 5, 6]])\naxis = tf.constant([0])",
    "tensor = tf.constant([[1, 2, 3], [4, 5, 6]])\naxis = tf.constant([0])",
    "tensor = tf.constant([[1, 2, 3], [4, 5, 6]])\naxis = tf.constant([0])"
  ]
}