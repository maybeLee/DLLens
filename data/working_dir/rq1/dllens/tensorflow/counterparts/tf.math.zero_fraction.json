{
  "function_name": "tf.math.zero_fraction(value,name=None)",
  "inputs": [
    "value"
  ],
  "sample_inputs": [
    "value = tf.constant([[1.0, 0.0], [0.0, 1.0]])",
    "value = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)",
    "value = tf.constant(np.random.randn(2,4), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2), dtype='half')",
    "value = tf.constant(np.random.randn(2,1), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2,1,1,1), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2,1), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2), dtype='float16')",
    "value = tf.constant(np.random.randn(2), dtype='float32')",
    "value = tf.constant(np.random.randn(1,2), dtype='float32')",
    "value = tf.constant(np.random.randn(5,2), dtype='float32')",
    "value = tf.constant(np.random.randn(2,5), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2), dtype='float64')",
    "value = tf.constant(np.random.randn(2,2,1,1), dtype='float32')",
    "value = tf.constant(np.random.randn(), dtype='float32')",
    "value = tf.constant(np.random.randn(2,2), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(value):\n  return tf.math.zero_fraction(value)",
    "pytorch": "def pytorch_call(value):\n    zero_count = (value == 0).sum()\n    total_count = value.numel()\n    return zero_count.float() / total_count"
  },
  "llm_inputs": [
    "value = tf.constant([[1.0, 0.0], [0.0, 1.0]])",
    "value = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)",
    "value = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)"
  ]
}