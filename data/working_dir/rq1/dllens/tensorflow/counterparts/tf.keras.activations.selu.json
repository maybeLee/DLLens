{
  "function_name": "tf.keras.activations.selu(x)",
  "inputs": [
    "x"
  ],
  "sample_inputs": [
    "x = tf.constant([[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]])",
    "x = tf.constant([[0.1, 0.2], [0.3, 0.4]], dtype=tf.float32)",
    "x = tf.constant([[1.0, 2.0], [3.0, 4.0]])",
    "x = tf.constant(np.random.randn(2,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3), dtype='half')",
    "x = tf.constant(np.random.randn(2,5), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2), dtype='float32')",
    "x = tf.constant(np.random.randn(1,3), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3), dtype='float32')",
    "x = tf.constant(np.random.randn(5,3), dtype='float32')",
    "x = tf.constant(np.random.randn(), dtype='float32')",
    "x = tf.constant(np.random.randn(2,3), dtype='float64')",
    "x = tf.constant(np.random.randn(2,3), dtype='float16')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x):\n  return tf.keras.activations.selu(x)",
    "pytorch": "def pytorch_call(x):\n    return torch.nn.functional.selu(x)"
  },
  "llm_inputs": [
    "x = tf.constant([[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]])",
    "x = tf.constant([[0.1, 0.2], [0.3, 0.4]], dtype=tf.float32)",
    "x = tf.constant([[1.0, 2.0], [3.0, 4.0]])"
  ]
}