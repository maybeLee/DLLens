{
  "function_name": "tf.raw_ops.GatherNd(params,indices,name=None)",
  "inputs": [
    "params",
    "indices"
  ],
  "sample_inputs": [
    "params = tf.constant([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=tf.int32)\nindices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)",
    "params = tf.constant([[1, 2], [3, 4], [5, 6]], dtype=tf.float32)\nindices = tf.constant([[0], [2]], dtype=tf.int32)",
    "params = tf.constant([[1, 2], [3, 4], [5, 6], [7, 8]], dtype=tf.int32)\nindices = tf.constant([[0], [2]], dtype=tf.int32)",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (5,3)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,3,1,1,1)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,3,1,1)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,3)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,3,1)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,3)), dtype='int64')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (4,3)), dtype='int32')",
    "indices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)\nparams = tf.constant(np.random.randint(-50, 50, (3,5)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(params,indices):\n  return tf.raw_ops.GatherNd(params=params,indices=indices)",
    "pytorch": "def pytorch_call(params, indices):\n    if indices.size(1) == 1:\n        gathered = params[indices[:, 0]]\n    else:\n        gathered = params[indices[:, 0], indices[:, 1]]\n    return gathered"
  },
  "llm_inputs": [
    "params = tf.constant([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=tf.int32)\nindices = tf.constant([[0, 1], [1, 2]], dtype=tf.int32)",
    "params = tf.constant([[1, 2], [3, 4], [5, 6]], dtype=tf.float32)\nindices = tf.constant([[0], [2]], dtype=tf.int32)",
    "params = tf.constant([[1, 2], [3, 4], [5, 6], [7, 8]], dtype=tf.int32)\nindices = tf.constant([[0], [2]], dtype=tf.int32)"
  ]
}