{
  "function_name": "tf.math.xlogy(x,y,name=None)",
  "inputs": [
    "x",
    "y"
  ],
  "sample_inputs": [
    "x = tf.constant(3.0)\ny = tf.constant(2.5)",
    "x = tf.constant(3.0)\ny = tf.constant(4.0)",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(1,1,1,1,1), dtype='float32')",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(1,1,1,1), dtype='float32')",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(1,1,1), dtype='float32')",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(), dtype='float32')",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(1), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(1,1,1,1), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(1), dtype='float32')",
    "x = tf.constant(3.0)\ny = tf.constant(np.random.randn(1,1), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(1,1,1), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(1,1), dtype='float32')",
    "y = tf.constant(2.5)\nx = tf.constant(np.random.randn(1,1,1,1,1), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x,y):\n  return tf.math.xlogy(x,y)",
    "pytorch": "def pytorch_call(x, y):\n    return x * torch.log(y)"
  },
  "llm_inputs": [
    "x = tf.constant(3.0)\ny = tf.constant(2.5)",
    "x = tf.constant(3.0)\ny = tf.constant(4.0)",
    "x = tf.constant(3.0)\ny = tf.constant(2.5)"
  ]
}