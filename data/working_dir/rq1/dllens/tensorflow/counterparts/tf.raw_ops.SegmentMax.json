{
  "function_name": "tf.raw_ops.SegmentMax(data,segment_ids,name=None)",
  "inputs": [
    "data",
    "segment_ids"
  ],
  "sample_inputs": [
    "data = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)\nsegment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)",
    "data = tf.constant([1, 2, 3, 4], dtype=tf.float32)\nsegment_ids = tf.constant([0, 0, 1, 1], dtype=tf.int32)",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5,1,1), dtype='float32')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5,1,1,1), dtype='float32')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5), dtype='half')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5,1,1,1,1), dtype='float32')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5,1), dtype='float32')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5), dtype='float64')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5), dtype='float16')",
    "segment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)\ndata = tf.constant(np.random.randn(5), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(data,segment_ids):\n  return tf.raw_ops.SegmentMax(data=data,segment_ids=segment_ids)",
    "pytorch": "def pytorch_call(data, segment_ids):\n    unique_segments = segment_ids.unique()\n    max_values = torch.full((unique_segments.size(0),), float('-inf'), dtype=data.dtype)\n    for segment in unique_segments:\n        max_values[segment] = data[segment_ids == segment].max()\n    return max_values"
  },
  "llm_inputs": [
    "data = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)\nsegment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)",
    "data = tf.constant([1, 2, 3, 4], dtype=tf.float32)\nsegment_ids = tf.constant([0, 0, 1, 1], dtype=tf.int32)",
    "data = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)\nsegment_ids = tf.constant([0, 0, 1, 1, 1], dtype=tf.int32)"
  ]
}