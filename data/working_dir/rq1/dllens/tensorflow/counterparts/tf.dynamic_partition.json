{
  "function_name": "tf.dynamic_partition(data,partitions,num_partitions,name=None)",
  "inputs": [
    "data",
    "partitions",
    "num_partitions"
  ],
  "sample_inputs": [
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = tf.constant(2)",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 5",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 4",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 3",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5)), dtype='int32')",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5,1,1)), dtype='int32')",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5)), dtype='int64')",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5,1,1,1,1)), dtype='int32')",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5,1)), dtype='int32')",
    "partitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2\ndata = tf.constant(np.random.randint(-50, 50, (5,1,1,1)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(data,partitions,num_partitions):\n  return tf.dynamic_partition(data,partitions,num_partitions)",
    "pytorch": "def pytorch_call(data, partitions, num_partitions):\n    partitioned_data = [data[partitions == i] for i in range(num_partitions)]\n    return partitioned_data"
  },
  "llm_inputs": [
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = 2",
    "data = tf.constant([1, 2, 3, 4, 5])\npartitions = tf.constant([0, 1, 0, 1, 0])\nnum_partitions = tf.constant(2)"
  ]
}