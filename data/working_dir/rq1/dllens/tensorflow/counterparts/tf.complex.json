{
  "function_name": "tf.complex(real,imag,name=None)",
  "inputs": [
    "real",
    "imag"
  ],
  "sample_inputs": [
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)",
    "real = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0], dtype=tf.float32)\nimag = tf.constant([0.0, 1.0, 0.5, 2.0, 3.0], dtype=tf.float32)",
    "real = tf.constant([1.0, 2.0, 3.0])\nimag = tf.constant([4.0, 5.0, 6.0])",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(1), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(3,1,1,1), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(3,1,1,1,1), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(3,1,1,1), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(3,1,1), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(1), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(3), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(3,1,1,1,1), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(3,1,1), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(3), dtype='float32')",
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant(np.random.randn(3,1), dtype='float32')",
    "imag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)\nreal = tf.constant(np.random.randn(3,1), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(real,imag):\n  return tf.complex(real,imag)",
    "pytorch": "def pytorch_call(real, imag):\n    return torch.complex(real, imag)"
  },
  "llm_inputs": [
    "real = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)\nimag = tf.constant([4.0, 5.0, 6.0], dtype=tf.float32)",
    "real = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0], dtype=tf.float32)\nimag = tf.constant([0.0, 1.0, 0.5, 2.0, 3.0], dtype=tf.float32)",
    "real = tf.constant([1.0, 2.0, 3.0])\nimag = tf.constant([4.0, 5.0, 6.0])"
  ]
}