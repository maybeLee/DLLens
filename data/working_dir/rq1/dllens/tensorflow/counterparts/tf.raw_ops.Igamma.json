{
  "function_name": "tf.raw_ops.Igamma(a,x,name=None)",
  "inputs": [
    "a",
    "x"
  ],
  "sample_inputs": [
    "a = tf.constant(1.0)\nx = tf.constant(0.5)",
    "a = tf.constant(2.0)\nx = tf.constant(3.0)",
    "a = tf.constant(2.0)\nx = tf.constant([0.5, 1.0, 1.5])",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(1,1,1), dtype='float32')",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(1,1,1,1,1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(1,1,1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(1,1,1,1), dtype='float32')",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(1,1,1,1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(1,1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(1,1,1,1,1), dtype='float32')",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(), dtype='float32')",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(1,1), dtype='float32')",
    "x = tf.constant(0.5)\na = tf.constant(np.random.randn(1), dtype='float32')",
    "a = tf.constant(1.0)\nx = tf.constant(np.random.randn(), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(a,x):\n  return tf.raw_ops.Igamma(a=a,x=x)",
    "pytorch": "def pytorch_call(a, x):\n    return torch.special.gammainc(a, x).unsqueeze(0)"
  },
  "llm_inputs": [
    "a = tf.constant(1.0)\nx = tf.constant(0.5)",
    "a = tf.constant(2.0)\nx = tf.constant(3.0)",
    "a = tf.constant(2.0)\nx = tf.constant([0.5, 1.0, 1.5])"
  ]
}