{
  "function_name": "tf.zeros_like(input,dtype=None,name=None)",
  "inputs": [
    "input",
    "dtype"
  ],
  "sample_inputs": [
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ndtype = tf.float32",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\ndtype = tf.float32",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1,1)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,5)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1,1,1)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (4,2)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int64')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (5,2)), dtype='int32')",
    "dtype = tf.float32\ninput = tf.constant(np.random.randint(-50, 50, (2,3)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,dtype=None):\n  return tf.zeros_like(input,dtype)",
    "pytorch": "def pytorch_call(input, dtype=None):\n    return torch.zeros_like(input, dtype=dtype)"
  },
  "llm_inputs": [
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ndtype = tf.float32",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ndtype = tf.float32",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\ndtype = tf.float32"
  ]
}