{
  "function_name": "tf.raw_ops.PyFuncStateless(input,token,Tout,name=None)",
  "inputs": [
    "input",
    "token",
    "Tout"
  ],
  "sample_inputs": [
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant([], dtype=tf.float32)",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2), dtype='float16')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(1,2), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0,1,1,1,1), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0), dtype='float16')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2,1), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0), dtype='half')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,1), dtype='float32')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2), dtype='float64')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2), dtype='float32')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2,1,1,1), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0), dtype='float32')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(5,2), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0), dtype='float64')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0,1,1,1), dtype='float32')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2), dtype='half')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,5), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0,1), dtype='float32')",
    "token = 'example_token'\nTout = tf.constant([], dtype=tf.float32)\ninput = tf.constant(np.random.randn(2,2,1,1), dtype='float32')",
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant(np.random.randn(0,1,1), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,token,Tout):\n  return tf.raw_ops.PyFuncStateless(input=input,token=token,Tout=Tout)",
    "pytorch": "def pytorch_call(input, token, Tout):\n    return torch.tensor([], dtype=torch.float32)"
  },
  "llm_inputs": [
    "input = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ntoken = 'example_token'\nTout = tf.constant([], dtype=tf.float32)"
  ]
}