{
  "function_name": "tf.raw_ops.Minimum(x,y,name=None)",
  "inputs": [
    "x",
    "y"
  ],
  "sample_inputs": [
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ny = tf.constant([[4, 3], [2, 1]], dtype=tf.float32)",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2,2,1,1)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2,2,1,1,1)), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2,2,1)), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')",
    "y = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)\nx = tf.constant(np.random.randint(-50, 50, (2,2,1,1,1)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2,2,1)), dtype='int32')",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant(np.random.randint(-50, 50, (2,2,1,1)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x,y):\n  return tf.raw_ops.Minimum(x=x,y=y)",
    "pytorch": "def pytorch_call(x, y):\n    return torch.min(x, y)"
  },
  "llm_inputs": [
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.float32)\ny = tf.constant([[4, 3], [2, 1]], dtype=tf.float32)",
    "x = tf.constant([[1, 2], [3, 4]], dtype=tf.int32)\ny = tf.constant([[4, 3], [2, 1]], dtype=tf.int32)"
  ]
}