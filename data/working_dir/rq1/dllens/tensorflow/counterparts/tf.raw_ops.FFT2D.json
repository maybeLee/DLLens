{
  "function_name": "tf.raw_ops.FFT2D(input,name=None)",
  "inputs": [
    "input"
  ],
  "sample_inputs": [
    "input = tf.constant([[1.0 + 2j, 2.0 + 3j], [3.0 + 4j, 4.0 + 5j]], dtype=tf.complex64)",
    "input = tf.constant(np.random.randn(2,2,1,1), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,2,1), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,2), dtype='complex128')",
    "input = tf.constant(np.random.randn(2,4), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,1), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,5), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,2), dtype='complex64')",
    "input = tf.constant(np.random.randn(5,2), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,2,1,1,1), dtype='complex64')",
    "input = tf.constant(np.random.randn(2,3), dtype='complex64')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input):\n  return tf.raw_ops.FFT2D(input=input)",
    "pytorch": "def pytorch_call(input):\n    return torch.fft.fft2(input)"
  },
  "llm_inputs": [
    "input = tf.constant([[1.0 + 2j, 2.0 + 3j], [3.0 + 4j, 4.0 + 5j]], dtype=tf.complex64)",
    "input = tf.constant([[1.0 + 2j, 2.0 + 3j], [3.0 + 4j, 4.0 + 5j]], dtype=tf.complex64)",
    "input = tf.constant([[1.0 + 2j, 2.0 + 3j], [3.0 + 4j, 4.0 + 5j]], dtype=tf.complex64)"
  ]
}