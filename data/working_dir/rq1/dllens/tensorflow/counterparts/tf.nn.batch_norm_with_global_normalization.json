{
  "function_name": "tf.nn.batch_norm_with_global_normalization(input,mean,variance,beta,gamma,variance_epsilon,scale_after_normalization,name=None)",
  "inputs": [
    "input",
    "mean",
    "variance",
    "beta",
    "gamma",
    "variance_epsilon",
    "scale_after_normalization"
  ],
  "sample_inputs": [
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([1.0, 2.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2), dtype='float64')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(2,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(2,1,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(2,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(2,1,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(2,1,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(2,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(2,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(1,1,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(2,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(2,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(1,2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(2,1,1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(1,1,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(2,1,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2), dtype='half')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(2,1,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ngamma = tf.constant(np.random.randn(2,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(2,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(1,1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(1,1), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(2,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2), dtype='float16')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2,2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nmean = tf.constant(np.random.randn(2,1,1,1,1), dtype='float32')",
    "mean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\ninput = tf.constant(np.random.randn(2), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance_epsilon = tf.constant(np.random.randn(), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nbeta = tf.constant(np.random.randn(), dtype='float32')",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)\nvariance = tf.constant(np.random.randn(2), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,mean,variance,beta,gamma,variance_epsilon,scale_after_normalization):\n  return tf.nn.batch_norm_with_global_normalization(input,mean,variance,beta,gamma,variance_epsilon,scale_after_normalization)",
    "pytorch": "def pytorch_call(input, mean, variance, beta, gamma, variance_epsilon, scale_after_normalization):\n    if scale_after_normalization:\n        normalized_input = (input - mean) / torch.sqrt(variance + variance_epsilon)\n        output = gamma * normalized_input + beta\n    else:\n        output = (input - mean) / torch.sqrt(variance + variance_epsilon)\n    return output"
  },
  "llm_inputs": [
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([2.0, 3.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)",
    "input = tf.constant([[1.0, 2.0], [3.0, 4.0]], dtype=tf.float32)\nmean = tf.constant([1.0, 2.0], dtype=tf.float32)\nvariance = tf.constant([0.5, 0.5], dtype=tf.float32)\nbeta = tf.constant([0.1, 0.2], dtype=tf.float32)\ngamma = tf.constant([1.0, 1.0], dtype=tf.float32)\nvariance_epsilon = tf.constant(1e-05, dtype=tf.float32)\nscale_after_normalization = tf.constant(True)"
  ]
}