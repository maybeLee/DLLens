{
  "function_name": "tf.expand_dims(input,axis,name=None)",
  "inputs": [
    "input",
    "axis"
  ],
  "sample_inputs": [
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 1",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,1)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1,1,1)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (5,2)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int64')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2)), dtype='int32')",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 2",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,2)), dtype='int32')",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,2,1,1)), dtype='int32')",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 0",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = -2",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = -1",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = -3",
    "axis = 1\ninput = tf.constant(np.random.randint(-50, 50, (2,5)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,axis):\n  return tf.expand_dims(input,axis)",
    "pytorch": "def pytorch_call(input, axis):\n    return input.unsqueeze(axis)"
  },
  "llm_inputs": [
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 1",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 1",
    "input = tf.constant([[1, 2], [3, 4]])\naxis = 1"
  ]
}