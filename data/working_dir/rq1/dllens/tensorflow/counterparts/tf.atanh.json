{
  "function_name": "tf.atanh(x,name=None)",
  "inputs": [
    "x"
  ],
  "sample_inputs": [
    "x = tf.constant([0.1, 0.2, 0.3, 0.4, 0.5], dtype=tf.float32)",
    "x = tf.constant([0.5, -0.3, 0.8], dtype=tf.float32)",
    "x = tf.constant([0.1, 0.5, 0.9], dtype=tf.float32)",
    "x = tf.constant(np.random.randn(5,1), dtype='float32')",
    "x = tf.constant(np.random.randn(1), dtype='float32')",
    "x = tf.constant(np.random.randn(), dtype='float32')",
    "x = tf.constant(np.random.randn(5), dtype='float32')",
    "x = tf.constant(np.random.randn(5,1,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5), dtype='float64')",
    "x = tf.constant(np.random.randn(5,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5), dtype='half')",
    "x = tf.constant(np.random.randn(5), dtype='float16')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x):\n  return tf.atanh(x)",
    "pytorch": "def pytorch_call(x):\n    return torch.atanh(x)"
  },
  "llm_inputs": [
    "x = tf.constant([0.1, 0.2, 0.3, 0.4, 0.5], dtype=tf.float32)",
    "x = tf.constant([0.5, -0.3, 0.8], dtype=tf.float32)",
    "x = tf.constant([0.1, 0.5, 0.9], dtype=tf.float32)"
  ]
}