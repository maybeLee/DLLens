{
  "function_name": "tf.image.flip_left_right(image)",
  "inputs": [
    "image"
  ],
  "sample_inputs": [
    "image = tf.constant([[[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]])",
    "image = tf.constant([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])",
    "image = tf.constant([[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]], [[19, 20, 21], [22, 23, 24], [25, 26, 27]]], dtype=tf.int32)",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,3,3)), dtype='int64')",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,5,3)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,1,3)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,3,1)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,3)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,1,3,3)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,5,3,3)), dtype='int32')",
    "image = tf.constant(np.random.randint(-50, 50, (1,4,3,3)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(image):\n  return tf.image.flip_left_right(image)",
    "pytorch": "def pytorch_call(image):\n    return torch.flip(image, dims=[-2])"
  },
  "llm_inputs": [
    "image = tf.constant([[[[1, 2, 3], [4, 5, 6], [7, 8, 9]]]])",
    "image = tf.constant([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])",
    "image = tf.constant([[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]], [[19, 20, 21], [22, 23, 24], [25, 26, 27]]], dtype=tf.int32)"
  ]
}