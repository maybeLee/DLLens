{
  "function_name": "tf.raw_ops.Max(input,axis,keep_dims=False,name=None)",
  "inputs": [
    "input",
    "axis",
    "keep_dims"
  ],
  "sample_inputs": [
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False",
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(0, dtype=tf.int32)\nkeep_dims = False",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(5,3), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(4,3), dtype='float32')",
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(1, dtype=tf.int32)\nkeep_dims = True",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3,1), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,1), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3,1,1), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3), dtype='float64')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,5), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(1,3), dtype='float32')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3), dtype='half')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3), dtype='float16')",
    "axis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False\ninput = tf.constant(np.random.randn(2,3,1,1,1), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,axis,keep_dims=False):\n  return tf.raw_ops.Max(input=input,axis=axis,keep_dims=keep_dims)",
    "pytorch": "def pytorch_call(input, axis, keep_dims=False):\n    (max_values, _) = torch.max(input, dim=axis.item())\n    if keep_dims:\n        max_values = max_values.unsqueeze(axis.item())\n    return max_values"
  },
  "llm_inputs": [
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(1, dtype=tf.int32)\nkeep_dims = False",
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(0, dtype=tf.int32)\nkeep_dims = False",
    "input = tf.constant([[1, 2, 3], [4, 5, 6]], dtype=tf.float32)\naxis = tf.constant(0, dtype=tf.int32)\nkeep_dims = False"
  ]
}