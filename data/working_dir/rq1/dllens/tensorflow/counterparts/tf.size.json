{
  "function_name": "tf.size(input,out_type=tf.dtypes.int32,name=None)",
  "inputs": [
    "input",
    "out_type"
  ],
  "sample_inputs": [
    "input = tf.constant([[1, 2], [3, 4], [5, 6]])\nout_type = tf.dtypes.int32",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,2,1)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (1,2)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (4,2)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,2)), dtype='int64')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, ()), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,5)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,2,1,1)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (5,2)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,2,1,1,1)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,2)), dtype='int32')",
    "out_type = tf.dtypes.int32\ninput = tf.constant(np.random.randint(-50, 50, (3,1)), dtype='int32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(input,out_type=tf.dtypes.int32):\n  return tf.size(input,out_type)",
    "pytorch": "def pytorch_call(input, out_type=torch.int32):\n    return torch.tensor(input.numel(), dtype=out_type)"
  },
  "llm_inputs": [
    "input = tf.constant([[1, 2], [3, 4], [5, 6]])\nout_type = tf.dtypes.int32",
    "input = tf.constant([[1, 2], [3, 4], [5, 6]])\nout_type = tf.dtypes.int32",
    "input = tf.constant([[1, 2], [3, 4], [5, 6]])\nout_type = tf.dtypes.int32"
  ]
}