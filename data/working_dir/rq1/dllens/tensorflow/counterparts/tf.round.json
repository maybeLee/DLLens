{
  "function_name": "tf.round(x,name=None)",
  "inputs": [
    "x"
  ],
  "sample_inputs": [
    "x = tf.constant([[1.2, 2.5], [3.7, 4.1]], dtype=tf.float32)",
    "x = tf.constant([[1.2, 2.5], [3.7, 4.4]], dtype=tf.float32)",
    "x = tf.constant([[1.2, 2.5], [3.7, 4.9]], dtype=tf.float32)",
    "x = tf.constant(np.random.randn(2,2,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,2), dtype='float32')",
    "x = tf.constant(np.random.randn(), dtype='float32')",
    "x = tf.constant(np.random.randn(2,2,1), dtype='float32')",
    "x = tf.constant(np.random.randn(5,2), dtype='float32')",
    "x = tf.constant(np.random.randn(4,2), dtype='float32')",
    "x = tf.constant(np.random.randn(2,2), dtype='float64')",
    "x = tf.constant(np.random.randn(2,2), dtype='half')",
    "x = tf.constant(np.random.randn(1,2), dtype='float32')",
    "x = tf.constant(np.random.randn(2,2), dtype='float16')",
    "x = tf.constant(np.random.randn(2), dtype='float32')",
    "x = tf.constant(np.random.randn(2,2,1,1,1), dtype='float32')",
    "x = tf.constant(np.random.randn(2,5), dtype='float32')"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(x):\n  return tf.round(x)",
    "pytorch": "def pytorch_call(x):\n    return torch.round(x)"
  },
  "llm_inputs": [
    "x = tf.constant([[1.2, 2.5], [3.7, 4.1]], dtype=tf.float32)",
    "x = tf.constant([[1.2, 2.5], [3.7, 4.4]], dtype=tf.float32)",
    "x = tf.constant([[1.2, 2.5], [3.7, 4.9]], dtype=tf.float32)"
  ]
}