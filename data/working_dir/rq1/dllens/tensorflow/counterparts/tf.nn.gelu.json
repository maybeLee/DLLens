{
  "function_name": "tf.nn.gelu(features,approximate=False,name=None)",
  "inputs": [
    "features",
    "approximate"
  ],
  "sample_inputs": [
    "features = tf.constant([[0.1], [0.2], [0.3]], dtype=tf.float32)\napproximate = False",
    "features = tf.constant([[0.1], [0.2], [0.3]])\napproximate = False",
    "features = tf.constant([[0.1], [0.5], [0.9]])\napproximate = False",
    "approximate = False\nfeatures = tf.constant(np.random.randn(), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1), dtype='half')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,3), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1,1), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1,1,1), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1), dtype='float16')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1,1,1,1), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(1,1), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1), dtype='float32')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,1), dtype='float64')",
    "approximate = False\nfeatures = tf.constant(np.random.randn(3,5), dtype='float32')",
    "features = tf.constant([[0.1], [0.2], [0.3]], dtype=tf.float32)\napproximate = True"
  ],
  "counterparts": {
    "tensorflow": "def tensorflow_call(features,approximate=False):\n  return tf.nn.gelu(features,approximate)",
    "pytorch": "def pytorch_call(features, approximate=False):\n    return torch.nn.functional.gelu(features, approximate='none' if not approximate else 'tanh')"
  },
  "llm_inputs": [
    "features = tf.constant([[0.1], [0.2], [0.3]], dtype=tf.float32)\napproximate = False",
    "features = tf.constant([[0.1], [0.2], [0.3]])\napproximate = False",
    "features = tf.constant([[0.1], [0.5], [0.9]])\napproximate = False"
  ]
}